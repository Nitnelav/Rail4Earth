services:
  mysql:
    restart: unless-stopped
    image: mysql:8.0
    container_name: semaphore-mysql
    volumes:
      - semaphore-mysql:/var/lib/mysql
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_DATABASE: semaphore
      MYSQL_USER: semaphore
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  openvpn:
    # https://github.com/kylemanna/docker-openvpn/blob/master/docs/docker-compose.md
    cap_add:
     - NET_ADMIN
    image: kylemanna/openvpn
    container_name: openvpn
    environment:
      OVPN_NATDEVICE: eth+
    ports:
     - "1194:1194/udp"
     - 3000:3000 # for semaphore web ui
    restart: always
    volumes:
     - ./openvpn-data/conf:/etc/openvpn
  semaphore:
    restart: unless-stopped
    container_name: semaphore
    build:
      context: .
      dockerfile: semaphore/Dockerfile
    environment:
      SEMAPHORE_DB_USER: semaphore
      SEMAPHORE_DB_PASS: ${MYSQL_PASSWORD}
      SEMAPHORE_DB_HOST: mysql # for postgres, change to: postgres
      SEMAPHORE_DB_PORT: 3306 # change to 5432 for postgres
      SEMAPHORE_DB_DIALECT: mysql
      SEMAPHORE_DB: semaphore
      SEMAPHORE_PLAYBOOK_PATH: /tmp/semaphore/
      SEMAPHORE_ADMIN_PASSWORD: ${SEMAPHORE_ADMIN_PASSWORD}
      SEMAPHORE_ADMIN_NAME: admin
      SEMAPHORE_ADMIN_EMAIL: admin@localhost
      SEMAPHORE_ADMIN: admin
      SEMAPHORE_ACCESS_KEY_ENCRYPTION: ${SEMAPHORE_ACCESS_KEY_ENCRYPTION} # It must be generated by using the following command: head -c32 /dev/urandom | base64
      ANSIBLE_HOST_KEY_CHECKING: False # We are using OpenVPN, so it is ok, additionally RPI IP address are dynamic
    network_mode: "service:openvpn"
    volumes:
      - semaphore-data:/home/semaphore/data/:z
    depends_on:
      - mysql # for postgres, change to: postgres
      - openvpn
volumes:
  semaphore-mysql:
  semaphore-data: # storage of raw sensor data
